DROP TABLE IF EXISTS event_comment CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilation_event CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS users CASCADE;



CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT PK_CATEGORY PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR(255) NOT NULL,
    CONSTRAINT PK_COMPILATION PRIMARY KEY (id),
    CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(255) NOT NULL,
    annotation VARCHAR(500) NOT NULL,
    category_id BIGINT,
    confirmed_requests INT,
    create_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(5000) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT,
    lat REAL,
    lon REAL,
    paid BOOLEAN,
    participant_limit INT NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state VARCHAR(15) NOT NULL,
    views BIGINT,
    CONSTRAINT PK_EVENT PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_FOR_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT FK_EVENT_FOR_USER FOREIGN KEY (initiator_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS compilation_event (
    compilation_id BIGINT REFERENCES compilations (id),
    event_id BIGINT REFERENCES events (id),
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT FK_EVENT_FOR_COMPIL FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_COMPIL_FOR_EVENT FOREIGN KEY (compilation_id) REFERENCES compilations (id)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    status VARCHAR(15) NOT NULL,
    CONSTRAINT PK_REQUESTS PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_FOR_REQUEST FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_USER_FOR_REQUEST FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(800) NOT NULL,
    event_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    organizer BOOLEAN,
    display_name VARCHAR(255),
    CONSTRAINT PK_COMMENTS PRIMARY KEY (id),
    CONSTRAINT FK_COMMENT_FOR_EVENT FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_COMMENT_FOR_USER FOREIGN KEY (author_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS event_comment (
    comment_id BIGINT REFERENCES comments (id),
    event_id BIGINT REFERENCES events (id),
    PRIMARY KEY (comment_id, event_id),
    CONSTRAINT FK_EVENT_FOR_COMMENT FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_COMMENT_FOR_EVENT FOREIGN KEY (comment_id) REFERENCES comments (id)
);